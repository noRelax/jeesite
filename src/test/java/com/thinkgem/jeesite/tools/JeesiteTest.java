package com.thinkgem.jeesite.tools;import com.thinkgem.jeesite.common.persistence.Page;import com.thinkgem.jeesite.common.test.SpringTransactionalContextTests;import com.thinkgem.jeesite.common.utils.JedisUtils;import com.thinkgem.jeesite.common.utils.SpringContextHolder;import com.thinkgem.jeesite.modules.sys.entity.User;import com.thinkgem.jeesite.modules.sys.service.SystemService;import com.thinkgem.jeesite.modules.test.entity.Admin;import com.thinkgem.jeesite.modules.test.entity.Criteria;import com.thinkgem.jeesite.modules.test.service.TestAdminService;import com.thinkgem.jeesite.modules.test.service.TestService;import org.apache.commons.lang3.builder.ReflectionToStringBuilder;import org.junit.Before;import org.junit.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.ApplicationContext;import org.springframework.test.annotation.Rollback;import java.sql.SQLException;import java.util.Arrays;import java.util.HashMap;import java.util.List;import java.util.Map;/** * Created by wusong on 2017/5/24. */public class JeesiteTest extends SpringTransactionalContextTests {    @Value("#{APP_PROP['cas.project.url']}")    private String url;    private TestService testService;    @Autowired    private TestAdminService testAdminService;    @Autowired    private SystemService systemService;    /**     * 学习spring的@value用法和配置     */    @Test    public void test2() {        System.out.println(url);    }    @Before    public void TestServiceInit() {        ApplicationContext applicationContext = SpringContextHolder.getApplicationContext();        testService = (TestService) applicationContext.getBean("testService");    }    /**     * SpringContextHolder的应用     */    @Test    public void test1() {        ApplicationContext applicationContext = SpringContextHolder.getApplicationContext();        TestService testService = (TestService) applicationContext.getBean("testService");        com.thinkgem.jeesite.modules.test.entity.Test test = testService.get("1");        System.out.println(test.toString());    }    /**     * 分页使用     */    @Test    public void testPage() {        com.thinkgem.jeesite.modules.test.entity.Test test = new com.thinkgem.jeesite.modules.test.entity.Test();        Page<com.thinkgem.jeesite.modules.test.entity.Test> testPage = testService.findPage(new Page<com.thinkgem.jeesite.modules.test.entity.Test>(2, 10), test);        for (com.thinkgem.jeesite.modules.test.entity.Test testObj : testPage.getList()) {            System.out.println(testObj.toString());        }    }    @Test    public void testMybatisGenerator() {        Criteria _parameter = new Criteria();        Map<String, Object> condition = _parameter.getCondition();        condition.put("name", "吴松");        int count = sqlSessionTemplate.selectOne("com.thinkgem.jeesite.modules.test.entity.Admin.countByExample", _parameter);        System.out.println(count);        System.out.println(ReflectionToStringBuilder.toString(_parameter));    }    @Test    public void updateAdmin() {//        Criteria _parameter = new Criteria();        Admin record = new Admin();        record.setName("wusonghhaahaa");        Map<String, Object> condition = new HashMap<String, Object>();        condition.put("username","w吴松");        Map _parameter=new HashMap();        _parameter.put("record",record);        _parameter.put("condition",condition);        int result = sqlSessionTemplate.update("com.thinkgem.jeesite.modules.test.entity.Admin.updateByExampleSelective", _parameter);        System.out.println("result>>>>>"+result);    }    @Test    public void updateByPrimaryKey(){        Admin record = new Admin();        record.setId("1");        record.setName("wusonghhaahaa");        sqlSessionTemplate.update("com.thinkgem.jeesite.modules.test.entity.Admin.updateByPrimaryKey",record);    }    @Test    @Rollback(false)//防止事务自动回滚    public void testUpdateAdmin() {        testService.updateAdmin();        Admin admin2 = (Admin)sqlSessionTemplate.selectOne("com.thinkgem.jeesite.modules.test.entity.Admin.selectByPrimaryKey", 1L);        System.out.println(">>>>>>>"+ReflectionToStringBuilder.toString(admin2));    }    @Test    public void testInsert() throws SQLException {        User user = new User();        user.setId("14");        systemService.deleteUser(user);    }    /**     * 测试redis     */    @Test    public void testRedis() {        HashMap<String, String> map = new HashMap<String, String>();        map.put("name", "wusong");        String s = JedisUtils.mapPut("hmset_test", map);        System.out.println(s);    }    @Test    public void test(){        List<String> ids= Arrays.asList("a","b");        String[] idStrs = ids.toArray(new String[0]);        JedisUtils.setSetAdd("ids",idStrs);    }}